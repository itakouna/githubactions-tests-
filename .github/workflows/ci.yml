name: GitHub Actions Multiple Environments
run-name: ${{ github.actor }} tests GitHub Actions Multiple Environments 🚀
on: [push, workflow_dispatch]
jobs:
  unittest:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
  integration_test:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
  build:
    runs-on: ubuntu-latest
    needs:
      - unittest
      - integration_test
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"

  staging_deploy:
    needs: 
      - build #keyword is used to specify that a job depends on the successful 
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"

  prod_deploy:
    needs:
      - build #keyword is used to specify that a job depends on the successful 
    runs-on: ubuntu-latest
    environment: production
    steps:
     ## Manual Approval ##
      - name: Manual Approval
        uses: trstringer/manual-approval@v1
        timeout-minutes: 60
        with:
          secret: ${{ github.token }}
          approvers: itakouna # your github username or team name
          minimum-approvals: 1
          issue-title: "Please validate deployment"
          issue-body: "Please check the deployment and approve or deny"
          exclude-workflow-initiator-as-approver: false
          additional-approved-words: 'yes'
          additional-denied-words: 'no'
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
